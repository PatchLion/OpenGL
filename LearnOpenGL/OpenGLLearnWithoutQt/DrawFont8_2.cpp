#include "stdafx.h"
#include "DrawFont8_2.h"

GLubyte space[] = {  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

GLubyte letters[][13] = { 
		{ 0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0x66, 0x3c, 0x18 },
		{ 0x00, 0x00, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe },
		{ 0x00, 0x00, 0x7e, 0xe7, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e },
		{ 0x00, 0x00, 0xfc, 0xce, 0xc7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc7, 0xce, 0xfc },
		{ 0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xc0, 0xff },
		{ 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0xff },
		{ 0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xcf, 0xc0, 0xc0, 0xc0, 0xc0, 0xe7, 0x7e },
		{ 0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3 },
		{ 0x00, 0x00, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e },
		{ 0x00, 0x00, 0x7c, 0xee, 0xc6, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06 },
		{ 0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xe0, 0xf0, 0xd8, 0xcc, 0xc6, 0xc3 },
		{ 0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0 },
		{ 0x00, 0x00, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xdb, 0xff, 0xff, 0xe7, 0xc3 },
		{ 0x00, 0x00, 0xc7, 0xc7, 0xcf, 0xcf, 0xdf, 0xdb, 0xfb, 0xf3, 0xf3, 0xe3, 0xe3 },
		{ 0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xe7, 0x7e },
		{ 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe },
		{ 0x00, 0x00, 0x3f, 0x6e, 0xdf, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x66, 0x3c },
		{ 0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe },
		//{ 0x00, 0x00, 0x3f, 0x6e, 0xdf, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x66, 0x3c },
		//{ 0x00, 0x00, 0xc3, 0xc6, 0xcc, 0xd8, 0xf0, 0xfe, 0xc7, 0xc3, 0xc3, 0xc7, 0xfe },
		{ 0x00, 0x00, 0x7e, 0xe7, 0x03, 0x03, 0x07, 0x7e, 0xe0, 0xc0, 0xc0, 0xe7, 0x7e },
		{ 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff },
		{ 0x00, 0x00, 0x7e, 0xe7, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3 },
		{ 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3 },
		{ 0x00, 0x00, 0xc3, 0xe7, 0xff, 0xff, 0xdb, 0xdb, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3 },
		{ 0x00, 0x00, 0xc3, 0x66, 0x66, 0x3c, 0x3c, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3 },
		{ 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x3c, 0x66, 0x66, 0xc3 },
		{ 0x00, 0x00, 0xff, 0xc0, 0xc0, 0x60, 0x30, 0x7e, 0x0c, 0x06, 0x03, 0x03, 0xff } };


CDrawFont8_2::CDrawFont8_2()
{
}

CDrawFont8_2::~CDrawFont8_2()
{
}


void CDrawFont8_2::displayEvent()
{
	CLearnOpenGLBase::displayEvent();

	glWindowPos3d(3, 3, 0);
	//glRasterPos3i(0, 0, -0.1);
	printString("A B C D E F G H I J");
	//glRasterPos3i(0, 0.5, -0.1);
	glWindowPos3d(3, 23, 0);
	printString("K L M N O P Q R S T");
	//glRasterPos3i(0, 0.5, -0.1);
	glWindowPos3d(3, 43, 0);
	printString("U V W X Y Z");
	//glRasterPos3i(0, 0.5, -0.1);
	glWindowPos3d(3, 63, 0);

	glutSwapBuffers();
}

void CDrawFont8_2::init()
{
	CLearnOpenGLBase::init();

	glPixelStorei(GL_UNPACK_ALIGNMENT, 1);

	glColor3f(1.0, 0.0, 0.0);
	//glRasterPos3i(0, 0, -0.1);
	glWindowPos3d(3, 3, 0);

	GLfloat pos[4];
	glGetFloatv(GL_CURRENT_RASTER_POSITION, pos);

	printf("GL_CURRENT_RASTER_POSITION: %f, %f, %f, %f\n", pos[0], pos[1], pos[2], pos[3]);

	GLboolean vaild;
	glGetBooleanv(GL_CURRENT_RASTER_POSITION_VALID, &vaild);
	printf("GL_CURRENT_RASTER_POSITION_VALID: %s\n", vaild ? "true" : "false");

	makeRasterFont();
}

void CDrawFont8_2::keyPressedEvent(unsigned char key, int x, int y)
{
	if ('o' == key)
	{
		//glReadPixels(0, 0, width(), height(), GL_UNSIGNED_INT_24_8, GL_RGB, )
	}
	LearnOpenGL::CLearnOpenGLBase::keyPressedEvent(key, x, y);
}

void CDrawFont8_2::makeRasterFont(void)
{
	GLuint i, j;

	glPixelStorei(GL_UNPACK_ALIGNMENT, 1);

	m_fontOffset = glGenLists(128);
	for (i = 0, j = 'A'; i < 26; i++, j++)
	{
		glNewList(m_fontOffset + j, GL_COMPILE);
		glBitmap(8, 13, 0, 2.0, 10, 0, letters[i]);
		glEndList();
	}
	glNewList(m_fontOffset + ' ', GL_COMPILE);
	glBitmap(8, 13, 0, 2, 10, 0, space);
	glEndList();
}

void CDrawFont8_2::printString(char *s)
{
	glPushAttrib(GL_LIST_BIT);
	glListBase(m_fontOffset);
	glCallLists(strlen(s), GL_UNSIGNED_BYTE, s);
	glPopAttrib();
}
